---
### Directory create ###
- name: Create working directories
  file:
    path: "{{ item }}"
    state: directory
    mode: '0755'
  loop:
    - /root/install_dir

### ssh key ####
- name: Ensure .ssh directory exists
  file:
    path: ~/.ssh
    state: directory
    mode: '0700' 

### SSH key (no community.crypto) ###
- name: Check if SSH public key exists
  ansible.builtin.stat:
    path: /root/.ssh/id_rsa.pub
  register: ssh_pub_stat

- name: Generate SSH key pair if not present
  ansible.builtin.command: >
    ssh-keygen -q -t rsa -b 4096 -N '' -C 'root@bastion' -f /root/.ssh/id_rsa
  args:
    creates: /root/.ssh/id_rsa.pub
  when: not ssh_pub_stat.stat.exists

- name: Read public key from remote host
  ansible.builtin.slurp:
    src: /root/.ssh/id_rsa.pub
  register: ssh_pub_slurp
  become: true

- name: Set public key fact
  ansible.builtin.set_fact:
    ssh_pubkey: "{{ ssh_pub_slurp.content | trim }}"

- name: Show generated public key
  ansible.builtin.debug:
    msg: "{{ ssh_pubkey }}"

### install-Config ####
- name: Ensures /root/install_dir dir exists
  file: path=/root/install_dir state=directory

- name: "create /root/install_dir/install-config.yaml "
  copy:
    dest: /root/install_dir/install-config.yaml 
    content: |
      apiVersion: v1
      baseDomain: "{{ baseDomain }}"
      compute:
      - hyperthreading: Enabled
        name: worker
        replicas: 0
      controlPlane:
        hyperthreading: Enabled
        name: master
        replicas: 3
      metadata:
        name: "{{ clusterName }}"
      networking:
        clusterNetwork:
        - cidr: "{{ clusterCIRD }}"
          hostPrefix: {{ hostPrefix }}
        networkType: OpenShiftSDN
        serviceNetwork:
        - "{{ serviceNetwork }}"
      platform:
        vsphere:
          vcenter: "{{ vcenter_hostname }}"
          username: "{{ vcenter_user }}"
          password: "{{ vcenter_password }}"
          datacenter: "{{ vcenter_datacenter }}"
          defaultDatastore: "{{ default_datastore }}"
          folder: "{{ vmfoolder }}"
          diskType: thin
      fips: false
      pullSecret: '{{ PullSecret }}'
      sshKey: "{{ ssh_pubkey }}"

### manafests Create & modify ###
- name: create manafests
  shell: openshift-install create manifests --dir ./install_dir

- name: master scheduler disabled
  shell: "perl -pi -e 's/mastersSchedulable: true/mastersSchedulable: false/' ./install_dir/manifests/cluster-scheduler-02-config.yml"

### ignition Create ###
- name: create ignition
  shell: openshift-install create ignition-configs --dir /root/install_dir

- name: "append bootstrap ignition"
  copy:
    dest: /root/install_dir/append-bootstrap.ign
    content: |
      {
        "ignition": {
          "config": {
            "merge": [
              {
                "source": "http://{{ httpServer }}/bootstrap.ign",
                "verification": {}
              }
            ]
          },
          "timeouts": {},
          "version": "3.2.0"
        },
        "networkd": {},
        "passwd": {},
        "storage": {},
        "systemd": {}
      }

- name: move bootstrap.ign for web service 
  shell: mv /root/install_dir/bootstrap.ign /var/www/html/

- name: change perm and owner
  shell : chmod 755 /var/www/html/bootstrap.ign ; chown apache.apache /var/www/html/bootstrap.ign

- name: move append-bootstrap.ign for web service 
  shell: mv /root/install_dir/append-bootstrap.ign /var/www/html/

- name: change perm and owner
  shell : chmod 755 /var/www/html/append-bootstrap.ign ; chown apache.apache /var/www/html/append-bootstrap.ign

- name: move master.ign for web service 
  shell: mv /root/install_dir/master.ign /var/www/html/

- name: change perm and owner
  shell : chmod 755 /var/www/html/master.ign ; chown apache.apache /var/www/html/master.ign

- name: move worker.ign for web service 
  shell: mv /root/install_dir/worker.ign /var/www/html/

- name: change perm and owner
  shell : chmod 755 /var/www/html/worker.ign ; chown apache.apache /var/www/html/worker.ign